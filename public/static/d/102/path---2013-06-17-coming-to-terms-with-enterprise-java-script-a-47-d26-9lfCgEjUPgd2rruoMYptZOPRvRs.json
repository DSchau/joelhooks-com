{"data":{"site":{"siteMetadata":{"title":"The blog of Joel Hooks","description":"This is where I post my things.","author":"Joel Hooks","keywords":["Video Blogger"]}},"mdx":{"frontmatter":{"title":"Coming to Terms With Enterprise JavaScript","date":"Invalid date","banner":null,"slug":null,"categories":null,"keywords":null},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `What is enterprise javascript?`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Good question. One that might even make you chuckle`, `[1]`, ` a little bit on the inside.\nThe word \"enterprise\" is definitely a loaded term. It could be considered by\nsome to be a buzzword. Others might say \"Why are we talking about starships?\"`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `When I use the term \"enterprise\" to describe software, I typically mean\n\"software that helps people get work done more efficiently.\" In this sense,\nAngry Birds and your favorite Twitter client are not enterprise applications. A\nTwitter client that has additional features to facilitate and track a company's\nsocial engagement, on the other hand, might fall into the enterprise category.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `An application that is used in a call center to track incoming support requests\nis definitely \"enterprise\". A system that connects several \"legacy\" systems and\npresents employees with a unified interface and saves 1000s of man-years every\nmonth of application context switching? Enterprise.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Enterprise software is software that is sold to a business or government agency,\nand not to individuals. Content management, billing, point of sale, payment\nprocessing, customer relations, help desk, project management, enterprise\napplication integrations, time tracking, business intelligence... you get the\nidea.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `This is software for `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `getting things done`), `. This is software that `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `makes a business\nmoney`), `. Because of this, it is software that businesses will invest heavily in.`), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Enterprise isn't cool.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Maybe. It certainly evokes thoughts of ugly user interfaces with huge J2EE\nbackends. Developers working on Saturdays to get their TPS reports filed.\nEnterprise software certainly can be that. It doesn't have to be.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Today's software users, even enterprise software users, are more sophisticated.\nThey are used to using applications like Facebook and Gmail on a daily basis.\nThey have iPhones that present beautiful easy to use interfaces and excellent\nuser experience (UX). They want more.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `More importantly, perhaps, is that software that provides excellent UX makes it\neasier to get work done. Using software that sucks, is slow, is ugly, or\ngenerally misbehaves is counter-productive. Bad software represents lost revenue\nand increased overhead. Employees that are forced into bad software are forced\nto focus their energy on wrestling the software. Not only does this make them\nmiserable, but it saps a business's most valuable resource - the brain-power and\nenergy of their employees.`), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Enterprise can be cool.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `It can! It largely depends on how you define \"cool.\" For me, my biggest thrill\nin software development is eliminating cognitive overhead for people that are\ntrying to get work done. I want to make their working lives better. I want them\nto be mentally free to concentrate on harder problems. I want their businesses\nto make more money. I want them to see real value in their software, so that\nthey will keep hiring developers to build more software. Achieving these goals\nis definitely cool.`), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Where does JavaScript fit in?`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `In today's world, savvy enterprise customers demand rich experiences. They want\nto be able to access their data anytime and anywhere. They carry smart phones\nand tablets and expect their software to function on these devices as well as it\ndoes on their desktop computers.\nArguably the quickest way to achieve this multi-screen approach is through web\napplications. Applications that run, and run well, in any modern browser. You\ndon't have negotiate walled-garden app stores to deploy a web app.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `HTML pages originated as a format for linking scientific documents. This was a\ngreat achievement, but soon users wanted more interactivity. JavaScript was\nintroduced, and now we could begin to see richer experiences, right in the\nbrowser. This eventually brought us to DHTML, or dynamic HTML. The next\nevolution in web pages was AJAX, or asynchronous JavaScript and XML. This is a\nhuge step, allowing us to hit the server for additional data without moving to\nan entirely new page.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `These days we've gone a step further with single-page web applications. A\nsingle-page app isn't a brochure-like web page for strictly delivering content.\nIt is a real application, built to do work. A single-page application is a\n\"thick\" client that is more similar to a desktop application than a web page.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `JavaScript has matured. HTML has matured. CSS has matured. All of these\ntechnologies continue to see growth as their standards are updated to match\nmodern technology, and the demands of users.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Enterprises want to leverage these advances and build robust applications to\nfacilitate commerce. JavaScript is uniquely qualified as a programming language\nto help with this. It allows us to harness the the computing power of modern\ncomputers directly in the browser. In the past, we were forced to offload much\nof the work for displaying a web page on to the server. A request was made and\nthe server generated a page that was displayed in the browser.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `With modern JavaScript we are able to query the server for data via its\napplication programming interface (API) and use that data to dynamically update\ncontent in the browser without actually changing URLs or reloading a page. The\nclient side application has its own templates and logic and can manage itself\ntidily. The server is now a caretaker for data, while the application running in\nthe browser is entirely in charge of presentation and interaction with the data\nthat is provided.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `JavaScript has been used in enterprise applications for many years. It is almost\nas if we've come full circle. The major difference in modern applications is\nthat presentation concerns can now be completely offloaded to the client. We\naren't beholden to a JSP or other server-side page template for rendering\ncontent for our users. After the initial payload of the web application is\ndelivered, the server's job is now reduced to handling requests for data. This\nis still a big job, but the separation of concerns opens up a lot of\nopportunity. Because the server's boundaries are clearly separated from\npresentation and focused on data, we are able to build APIs that can support\ninfinite possibilities in terms of how we present and interact with the data\nthat is flowing from the server.\nThis is awesome. This is opportunity. We are going to take advantage of this.`), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `So what is enterprise JavaScript?`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Enterprise JavaScript is used for building web applications that facilitate\ncommerce is some form or another. Enterprise JavaScript is likely going to be\nlarger and more complicated than a simple web page. Enterprise JavaScript is\nprobably going to be developed by a team, perhaps a large team or even several\nteams, and will require stronger standards and practices than smaller\nnon-enterprise use cases.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Is it useful to tack on this \"enterprise\" label to JavaScript? Sometimes. When\nyou say that you are building an enterprise application, it definitely evokes a\nmental image of what you are dealing with. Good or bad. You could say\n\"large-scale\" JavaScript instead, but it wouldn't be as specific. I'm an\nenterprise developer, and I use JavaScript. Enterprise JavaScript.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `[1][http://enterprise-js.com/]`, `(`, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"http://enterprise-js.com/\"\n    }\n  }, `http://enterprise-js.com/`), `) is hilarious. Hint:\ndon't follow its advice!`));\n});"}}},"pageContext":{"id":"bc142275-3027-5a35-981b-64e8b934ac71","prev":{"id":"f8bf06a8-4635-5cc8-8d9e-a19f9b75fb7f","parent":{"name":"2013-06-22-optimizing-a-photography-studio-website-for-converstion-and-seo-the-analysis","sourceInstanceName":"legacy"},"excerpt":"The internet is a competitive place for small businesses, and this is especially\ntrue when we are talking about portrait photographers. My lovely wife is a\n family photographer in Fort Worth , Texas. She's been\ndoing portrait photography…","fields":{"title":"Optimizing a Photography Studio Website for Converstion and SEO: The Analysis","slug":"2013/06/22/Optimizing-a-Photography-Studio-Website-for-Converstion-and-SEO-The-Analysis","categories":[],"date":"2013-06-22 08:32"},"code":{"scope":"/Users/joel/Code/joelhooks-com/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}},"next":{"id":"487ef5f9-735e-57bf-ac05-04735e5ecb83","parent":{"name":"2013-06-10-the-paralyzing-grip-of-fear","sourceInstanceName":"legacy"},"excerpt":"My sons love playing basketball. After a certain age\n(around 12), youth sports change. The court or field is no longer filled with\nkids that were dragged to the game by their parents. These kids are here because\nthey love playing the game. So what do…","fields":{"title":"The Paralyzing Grip of Fear","slug":"2013/06/10/The-Paralyzing-Grip-of-Fear","categories":[],"date":"2013-06-10 17:21"},"code":{"scope":"/Users/joel/Code/joelhooks-com/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}}}}