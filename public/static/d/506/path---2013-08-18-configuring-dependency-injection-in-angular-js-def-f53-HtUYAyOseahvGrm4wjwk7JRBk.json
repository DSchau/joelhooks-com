{"data":{"site":{"siteMetadata":{"title":"Gatsby MDX Starter Project","description":"My Gatsby MDX Starter Project","author":"Robin Wieruch","keywords":["Software Engineer","Web Developer","Consultant","Freelancer"]}},"mdx":{"frontmatter":{"title":"Configuring Dependency Injection in AngularJS","date":"Invalid date","banner":null,"slug":null,"categories":null,"keywords":null},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Dependency injection is the act of supplying values or object instances (dependencies) to target objects\nfrom outside of the target object. In many (most?) cases this is automated\nby a framework, such as AngularJS.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `This means that a given target object does `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `not`), ` create its own dependencies,\nthrough the use of the `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"new\"), ` keyword or other creation methods.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `By creating and managing dependencies\noutside of an object, it makes it much easier to switch out that dependency as\nneeded. This is very useful when you are writing your unit tests, and can have\nmany advantages in larger systems.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `There are only three ways for an object to resolve its dependencies:`), React.createElement(MDXTag, {\n    name: \"ul\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `internally, via the `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"new\"), ` operator`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `lookup via a global variable (requirejs is an example)`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `the dependency is passed to the object`)), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `The third option is `, React.createElement(MDXTag, {\n    name: \"em\",\n    components: components,\n    parentName: \"p\"\n  }, `dependency injection`), `, and it is the preferred approach in\nAngularJS apps.`), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Defining your dependencies`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Dependency injection is a core feature of AngularJS. There are 3 approaches to\ndefining your dependencies, ordered by complexity from least to most:`), React.createElement(MDXTag, {\n    name: \"ul\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `module.service`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `module.factory`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `module.provider`)), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `note:`), ` `, React.createElement(MDXTag, {\n    name: \"em\",\n    components: components,\n    parentName: \"p\"\n  }, `AngularJS also provides `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"value\"), ` and `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"constant\"), ` dependencies. We aren't\ngoing to get into those two today.`)), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Both `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"service\"), ` and `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"factory\"), ` are abstractions that sit on top of `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"provider\"), `.\nUsing `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"factory\"), ` and `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"provider\"), ` will give you more flexibility, but are more\nverbose.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Before we look at how to use these tools, let's take a look at the AngularJS\nsource code and understand how they work.`), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `Interlude into the AngularJS internals`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `If you're a geek like me, you might be curious as to what is going on under the hood\nwhen you declare dependencies.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `I mentioned earlier that `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"service\"), ` and `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"factory\"), ` were abstractions on top of `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"provider\"), `.\nTo show you exactly how that works, we need to open up `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"injector.js\"), ` in `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"src/auto/\"), `\nfolder in the AngularJS source code:`), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, React.createElement(\"pre\", {\n    className: \"language-javascript\"\n  }, React.createElement(\"code\", {\n    className: \"language-javascript\"\n  }, React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), \" \", React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"provider\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"name\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" provider_\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"if\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"isFunction\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"provider_\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"||\"), \" \", React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"isArray\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"provider_\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"    \", \"provider_ \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" providerInjector\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"instantiate\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"provider_\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"if\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"!\"), \"provider_\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), \"$\", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"get\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"    \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"throw\"), \" \", React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"$injectorMinErr\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"\\n\", \"      \", React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'pget'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \"\\n\", \"      \", React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"\\\"Provider '\", \"{\", \"0\", \"}\", \"' must define $get factory method.\\\"\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \"\\n\", \"      \", \"name\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \"\\n\", \"    \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"return\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"providerCache\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"[\"), \"name \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"+\"), \" providerSuffix\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"]\"), \" \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" provider_\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), \"\\n\", \"\\n\", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), \" \", React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"factory\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"name\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" factoryFn\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"return\"), \" \", React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"provider\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"name\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \" $\", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"get\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" factoryFn \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), \"\\n\", \"\\n\", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), \" \", React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"service\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"name\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" constructor\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"return\"), \" \", React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"factory\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"name\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"[\"), \"\\n\", \"    \", React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'$injector'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \"\\n\", \"    \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"$injector\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"      \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"return\"), \" $injector\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"instantiate\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"constructor\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", \"    \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"]\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\")))), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `As you can see at a glance, `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"service\"), ` calls `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"factory\"), ` which calls `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"provider\"), `. So, when it\ngets right down to it, these three methods are the exact same thing. Convenient!`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Almost the exact same thing.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `There is a subtle difference. The AngularJS `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"service\"), ` uses\n`, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"$injector.instantiate\"), ` on the constructor function that you pass in. This means\nthat internally the `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"service\"), ` creates an instance of your function with the\n`, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"new\"), ` operator. This will provide the resulting object a valid 'this' scope.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Using `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"factory\"), ` doesn't call `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"new\"), ` on the function that is passed in`), `.\nWhen using `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"factory\"), `, the function that is passed in is called directly, and an\nobject is expteded to be returned.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Hat tip to\n`, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"http://twitter.com/ThomasBurleson\"\n    }\n  }, `@ThomasBurleson`), ` for pointing this\nout. This can be confusing if encountered in the wild. Now you know.\nHalf the battle.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Let's start with the simplest use case. The `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"service\"), `.`), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `Defining a service in AngularJS`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `A service instantiates a constructor function.`), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, React.createElement(\"pre\", {\n    className: \"language-javascript\"\n  }, React.createElement(\"code\", {\n    className: \"language-javascript\"\n  }, React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"angular\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"var\"), \" module \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" angular\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"module\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'myApp.myModel'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"[\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"]\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"var\"), \" \", React.createElement(\"span\", {\n    className: \"token function-variable function\"\n  }, \"MyModel\"), \" \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), \" \", React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"MyModel\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"asyncService\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"    \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"return\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"      \", \"someApi\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"        \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"return\"), \" asyncService\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"getStuff\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", \"      \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \"\\n\", \"    \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", \"\\n\", \"  \", \"module\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"service\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'myModel'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"[\"), React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'asyncService'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" MyModel\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"]\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \" \", React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"//simple option\"), \"\\n\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"angular\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\")))), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `In this example we are creating a module that will store a model that grabs data from some asynchronous\nservice. The `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"myModel\"), ` service will return an instance of `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"MyModel\"), ` when it is requested\nfor injection by other objects. The instance of `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"MyModel\"), ` is a singleton, and only one instance will\never be created and used by the application.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `This example could actually be even simpler if the injectable doesn't require any additional\ndependencies.`), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, React.createElement(\"pre\", {\n    className: \"language-javascript\"\n  }, React.createElement(\"code\", {\n    className: \"language-javascript\"\n  }, \"module\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"service\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'myModel'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" MyModel\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \" \", React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"//most simple option\")))), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"module.service\"), ` requires only two arguments. A string for its unique name, and a constructor\nto create an instance of. This approach is useful, and most of the time is probably all you need\nfor your application.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `When you need more flexibility than the `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"service\"), ` provides, it is time to look at `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"factory\"), `.`), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `Defining a factory in AngularJS`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `A factory returns an object.`), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, React.createElement(\"pre\", {\n    className: \"language-javascript\"\n  }, React.createElement(\"code\", {\n    className: \"language-javascript\"\n  }, React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"angular\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"var\"), \" module \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" angular\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"module\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'myApp.myModel'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"[\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"]\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"var\"), \" \", React.createElement(\"span\", {\n    className: \"token function-variable function\"\n  }, \"MyModel\"), \" \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), \" \", React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"MyModel\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"asyncService\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"    \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"return\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"      \", \"someApi\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"        \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"return\"), \" asyncService\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"getStuff\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \" \", React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"//promise?\"), \"\\n\", \"      \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \"\\n\", \"    \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", \"\\n\", \"  \", \"module\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"factory\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'myModel'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"[\"), \"\\n\", \"    \", React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'asyncService'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \"\\n\", \"    \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"asyncService\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"      \", React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"//could do some stuff here\"), \"\\n\", \"      \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"return\"), \" \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"new\"), \" \", React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"MyModel\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"asyncService\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", \"    \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"]\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"angular\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\")))), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Using a `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"factory\"), ` provides additional flexibility. By providing a factory function\nover a straight constructor, you are provided with the opportunity to do some work\nprior to returning the object. You are also in charge of creating the\ninstance that you want returned, unlike `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"service\"), `, which creates the\ninstance for the constructor function you provide.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `The above example is obviously not\ndoing anything interesting, but when you need to do some work prior to resolving a\ndependency, a factory can be a good choice.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `In the real world, I've used `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"factory\"), ` to provide a configurable mock data \"mode\". The\nfactory function would check to see which mode the app was in, and dynamically switch\nbetween mock and real data. This can be incredibly handy when you want to work with out\ndepending on external services.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Note that the factory function will be called exactly `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `one time`), `. Any work you do\nwill only be done once, and `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"myModel\"), ` will be whatever your factory function returns.\nIn this case, we are simply returning an instance of `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"MyModel\"), `, but a factory can return\nobjects `, React.createElement(MDXTag, {\n    name: \"em\",\n    components: components,\n    parentName: \"p\"\n  }, `and`), ` functions. Use that to your advantage.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `The last way to define dependencies is with `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"provider\"), `. Let's look at that next.`), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `Defining a provider with AngularJS`), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, React.createElement(\"pre\", {\n    className: \"language-javascript\"\n  }, React.createElement(\"code\", {\n    className: \"language-javascript\"\n  }, React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"angular\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"\\n\", \"    \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"var\"), \" module \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" angular\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"module\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"\\\"myApp.myModel\\\"\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"[\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"]\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", \"\\n\", \"    \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"var\"), \" \", React.createElement(\"span\", {\n    className: \"token function-variable function\"\n  }, \"MyModel\"), \" \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), \" \", React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"MyModel\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"        \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"return\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"            \", \"asyncService\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"null\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \"\\n\", \"            \", \"someApi\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"                \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"return\"), \" \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"this\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), \"asyncService\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"getStuff\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \" \", React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"//promise?\"), \"\\n\", \"            \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), \"\\n\", \"        \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), \"\\n\", \"\\n\", \"    \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), \"\\n\", \"\\n\", \"    \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"var\"), \" myModelProvider \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"        \", \"model\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"new\"), \" \", React.createElement(\"span\", {\n    className: \"token class-name\"\n  }, \"MyModel\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", \"        \", \"$\", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"get\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \":\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"[\"), React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'asyncService'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"asyncService\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"            \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"this\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), \"model\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), \"asyncService \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" asyncService\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \" \", React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"//\\\"manual\\\" dependency injection\"), \"\\n\", \"            \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"return\"), \" \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"this\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), \"model\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \" \", React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"//resolved for the lifetime of app\"), \"\\n\", \"        \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"]\"), \"\\n\", \"    \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", \"\\n\", \"    \", \"modules\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"provider\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'myModel'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" myModelProvider\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"angular\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\")))), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `As you can see, `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"provider\"), ` is lower level. Explicit and verbose. The `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"$get\"), ` function\nis used by AngularJS internally for the injector. A provider is `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `required`), ` to have a `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"$get\"), `\nfunction. When using `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"factory\"), ` (and `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"service\"), ` as well) the `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"$get\"), ` function is defined for\nyou.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `For all practical purposes you will likely never need to use `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"provider\"), ` unless you are a\ncontrol freak. In most circumstances a `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"factory\"), ` or `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"service\"), ` will suffice, but it is nice\nto know that `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"provider\"), ` is there, if you needed that level of explicit control for some reason.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `One thing to note about providers is that the provider is `, React.createElement(MDXTag, {\n    name: \"em\",\n    components: components,\n    parentName: \"p\"\n  }, `available during `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"em\"\n  }, `configuration phase`), ` of a module`), `. While I haven't found a specific use case for this, it is something to have in your toolbox.`), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `A little trick for dynamic dependencies`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `I mentioned before that with a `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"factory\"), ` (or `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"provider\"), `) you can return an object or a function.\nAs it turns out, this can be very useful if you need to dynamically update a resolved dependency.\nHere's a simple example using a factory.`), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, React.createElement(\"pre\", {\n    className: \"language-javascript\"\n  }, React.createElement(\"code\", {\n    className: \"language-javascript\"\n  }, \"module\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"factory\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'myDynamicInjectable'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"var\"), \" count \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" \", React.createElement(\"span\", {\n    className: \"token number\"\n  }, \"0\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"return\"), \" \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"    \", \"count \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"=\"), \" count \", React.createElement(\"span\", {\n    className: \"token operator\"\n  }, \"+\"), \" \", React.createElement(\"span\", {\n    className: \"token number\"\n  }, \"1\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", \"    \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"return\"), \" count\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\")))), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `This is an extremely trivial example, but now when you inject `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"myDynamicInjectable\"), ` and call it,\nit will return the freshly incremented `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"count\"), `.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `warning:`), ` `, React.createElement(MDXTag, {\n    name: \"em\",\n    components: components,\n    parentName: \"p\"\n  }, `don't do this. There are two things wrong with this example. It is storing state\nwith the count variable, and then it is manipulating state. This isn't the appropriate location\nfor either of those activities! A better solution would be to create an object that stored\nthat state and provided a nice API for manipulating it.`)), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `A more realistic (useful) use of this might look like this:`), React.createElement(\"div\", {\n    className: \"gatsby-highlight\",\n    \"data-language\": \"javascript\"\n  }, React.createElement(\"pre\", {\n    className: \"language-javascript\"\n  }, React.createElement(\"code\", {\n    className: \"language-javascript\"\n  }, \"module\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"factory\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'getCurrentShoppingCart'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"[\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token string\"\n  }, \"'getCurrentAccount'\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), \"getCurrentAccount\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"    \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"return\"), \" \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"function\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), \" \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"{\"), \"\\n\", \"      \", React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"//getCurrentAccount is also a factory that returns a function\"), \"\\n\", \"      \", React.createElement(\"span\", {\n    className: \"token comment\"\n  }, \"//perhaps a user can have multiple accounts?\"), \"\\n\", \"      \", React.createElement(\"span\", {\n    className: \"token keyword\"\n  }, \"return\"), \" \", React.createElement(\"span\", {\n    className: \"token function\"\n  }, \"getCurrentAccount\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"(\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \".\"), \"shoppingCart\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", \"    \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\"), \"\\n\", \"  \", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"}\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \",\"), \"\\n\", React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \"]\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \")\"), React.createElement(\"span\", {\n    className: \"token punctuation\"\n  }, \";\")))), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `There is a ton of dynamic flexibility you can take advantage of when returning functions from\nboth the `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"provider\"), ` and `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"factory\"), ` approaches. I'd proceed with caution. You could easily abuse this\nflexibility. Don't use this approach to manipulate and/or store state in the providers! The\njob of these tools is to `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `resolve dependencies`), `, and should be used only to `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `resolve dependencies`), `.`), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Conclusion`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `AngularJS provides several ways to configure dependency injection. From the simple `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"service\"), ` to the more flexible\n`, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"factory\"), ` and `, React.createElement(\"code\", {\n    className: \"language-text\"\n  }, \"provider\"), ` approaches. You should have a solid understanding of how these work\nunder the hood, and what situations are appropriate for each method.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `P.S. This article is the expansion of the answer to a question that was emailed to me.\nIf you have any questions, I'd love to help you out. My email and twitter can be found below, and I\nanswer them all.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `Related:`)), React.createElement(MDXTag, {\n    name: \"ul\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"li\",\n    props: {\n      \"href\": \"/blog/2013/05/01/when-is-a-singleton-not-a-singleton/\"\n    }\n  }, `AngularJS, Dependency Injection, and When Is a Singleton Not a Singleton?`)), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"li\",\n    props: {\n      \"href\": \"/blog/2013/04/24/modeling-data-and-state-in-your-angularjs-application/\"\n    }\n  }, `Modeling Data and State in Your AngularJS Application`))));\n});"}}},"pageContext":{"id":"f81c1120-cec0-5487-a114-e038c85c3471","prev":{"id":"bc78e825-2862-57c1-8dd7-05a00ce2b91d","parent":{"name":"2013-09-15-why-i-built-an-angularjs-training-site-on-rails","sourceInstanceName":"legacy"},"excerpt":"If you're into AngularJS at all, you are probably familiar with the kickass  AngularJS video training  from egghead.io. If you haven't seen egghead.io, it is a collection of 50+ short \"bite-sized\" training videos, largely focused on the AngularJS…","fields":{"title":"Why I Built an AngularJS Training Site on Rails","slug":"2013/09/15/Why-I-Built-an-AngularJS-Training-Site-on-Rails","categories":[],"date":"2013-09-15 11:24"},"code":{"scope":"/Users/joel/Code/joelhooks-com/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}},"next":{"id":"0c8e857a-1924-534c-b679-d882a1291d9f","parent":{"name":"2013-08-03-learn-angularjs-in-a-weekend","sourceInstanceName":"legacy"},"excerpt":"AngularJS has a reputation for a steep learning curve. It's definitely complex, but follows the 80/20 rule.  20% of the features are what you will use 80% of the time . If you are new to AngularJS and have a weekend to study, there are some very high…","fields":{"title":"Learn AngularJS this Weekend","slug":"2013/08/03/Learn-AngularJS-this-Weekend","categories":[],"date":"2013-08-03 23:36"},"code":{"scope":"/Users/joel/Code/joelhooks-com/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}}}}