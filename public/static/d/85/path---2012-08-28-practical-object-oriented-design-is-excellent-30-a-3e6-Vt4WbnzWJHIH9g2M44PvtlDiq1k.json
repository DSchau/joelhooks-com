{"data":{"site":{"siteMetadata":{"title":"The blog of Joel Hooks","description":"This is where I post my things.","author":"Joel Hooks","keywords":["Video Blogger"]}},"mdx":{"frontmatter":{"title":"Practical Object Oriented Design is Excellent","date":"Invalid date","banner":null,"slug":null,"categories":null,"keywords":null},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"img\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"src\": \"/images/pood.jpeg\",\n      \"alt\": \"Practical Object-Oriented Design in Ruby\"\n    }\n  })), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `I've been reading the Rough Cut of `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"http://www.amazon.com/exec/obidos/ASIN/0321721330/joehoobuiblo-20/ref=nosim/\"\n    }\n  }, `Practical Object Oriented Design`), `, and I have been absolutely enjoying every page. It isn't very often that a technical book comes along that really strikes me as a \"new classic,\" but this one qualifies. `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://twitter.com/sandimetz\"\n    }\n  }, `Sandi Metz`), ` has compiled a concise review of `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod\"\n    }\n  }, `SOLID design principles`), ` in clear approachable language.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Don't be put off by the \"in Ruby\" portion of the title. If you can read code and understand the basics of design patterns, this book shouldn't pose any technical hurdles regarding the language the author uses.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `One of my favorite features of this book was the way she guides us through the anti-patterns that we typically see in our code. We then step through a series of refactorings before arriving at a simple, maintainable, nicely packaged object-oriented design.`), React.createElement(\"blockquote\", {\n    className: \"twitter-tweet tw-align-center\"\n  }, React.createElement(\"p\", null, \"\\u201CDon\\u2019t overestimate your strengths and use an inflated self-view as an excuse to avoid tests.\\u201D \", React.createElement(\"a\", {\n    href: \"https://twitter.com/sandimetz\"\n  }, React.createElement(\"s\", null, \"@\"), React.createElement(\"b\", null, \"sandimetz\")), \" is talking to you. \", React.createElement(\"a\", {\n    href: \"https://twitter.com/search/?q=%23PracticalOOD\"\n  }, React.createElement(\"s\", null, \"#\"), React.createElement(\"b\", null, \"PracticalOOD\"))), \"\\u2014 Joel Hooks (@jhooks) \", React.createElement(\"a\", {\n    href: \"https://twitter.com/jhooks/status/240446750157070336\",\n    \"data-datetime\": \"2012-08-28T13:52:27+00:00\"\n  }, \"August 28, 2012\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `After we've been well schooled in fundamentals, we are given an excellent exposition of unit testing. `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `The unit testing chapter is worth the cost of admission alone.`)), React.createElement(\"blockquote\", {\n    className: \"twitter-tweet tw-align-center\",\n    \"data-in-reply-to\": 240464842845208576\n  }, React.createElement(\"p\", null, React.createElement(\"a\", {\n    href: \"https://twitter.com/robpenner\"\n  }, React.createElement(\"s\", null, \"@\"), React.createElement(\"b\", null, \"robpenner\")), \" \", React.createElement(\"a\", {\n    href: \"https://twitter.com/troygilbert\"\n  }, React.createElement(\"s\", null, \"@\"), React.createElement(\"b\", null, \"troygilbert\")), \" \", React.createElement(\"a\", {\n    href: \"https://twitter.com/jhooks\"\n  }, React.createElement(\"s\", null, \"@\"), React.createElement(\"b\", null, \"jhooks\")), \" Laziness, combined with very high standards, breeds the perfect programmer.\"), \"\\u2014 Sandi Metz (@sandimetz) \", React.createElement(\"a\", {\n    href: \"https://twitter.com/sandimetz/status/240472922702086144\",\n    \"data-datetime\": \"2012-08-28T15:36:27+00:00\"\n  }, \"August 28, 2012\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `This`), ` is where we want to go after grasping design patterns. It is earning a well deserved spot next to `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"http://www.amazon.com/exec/obidos/ASIN/0321503627/joehoobuiblo-20/ref=nosim/\"\n    }\n  }, `Growing Object-Oriented Software, Guided by Tests`), ` in my top ten list.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `What tops your favorites list for object-oriented patterns/practices?`));\n});"}}},"pageContext":{"id":"bc6bf746-e108-55b5-a2cf-8c4e49b414e9","prev":{"id":"d5cd52a5-fb13-5663-85d7-f3d86eafbc9c","parent":{"name":"2012-11-17-using-custom-jasmine-matchers-to-make-unit-tests-more-readable","sourceInstanceName":"legacy"},"excerpt":"Image from purplemattfish I'm a stickler for the \"single assertion per test\" guideline. One of the pillars of good unit tests is readability. Multiple asserts undermine this principle and make tests that are more difficult to read, understand, and…","fields":{"title":"Using Custom Jasmine Matchers to Make Unit Tests More Readable","slug":"2012/11/17/Using-Custom-Jasmine-Matchers-to-Make-Unit-Tests-More-Readable","categories":[],"date":"2012-11-17 10:55"},"code":{"scope":"/Users/joel/Code/joelhooks-com/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}},"next":{"id":"ce60db77-4663-57f8-a07c-374027f74e37","parent":{"name":"2012-08-27-on-transitioning-to-javascript-from-as3-slash-flex","sourceInstanceName":"legacy"},"excerpt":"I'm currently working on a large enterprise JS application, and enjoying myself quite a bit. We've implemented standards and practices that remove most of the bad parts of JS dev. We are using straight up JS with  AngularJS . We are covering our…","fields":{"title":"On Transitioning to JavaScript From AS3/Flex","slug":"2012/08/27/On-Transitioning-to-JavaScript-From-AS3Flex","categories":[],"date":"2012-08-27 10:12"},"code":{"scope":"/Users/joel/Code/joelhooks-com/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}}}}