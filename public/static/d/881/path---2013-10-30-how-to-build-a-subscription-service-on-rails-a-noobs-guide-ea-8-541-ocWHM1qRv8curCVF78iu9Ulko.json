{"data":{"site":{"siteMetadata":{"title":"The blog of Joel Hooks","description":"This is where I post my things.","author":"Joel Hooks","keywords":["Video Blogger"]}},"mdx":{"frontmatter":{"title":"How to Build a Subscription Service on Rails: A Noob's Guide","date":"Invalid date","banner":null,"slug":null,"categories":null,"keywords":null},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `There are few things as nerve-wracking as pushing your first subscription\nwebsite into production. Am I covering all the bases? Will everything break and\nleave me in a pit of customer support sadness? How do I even take payments? Are\nthey just going to laugh at me?`), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `Some Background`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `My friend John makes `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"http://egghead.io\"\n    }\n  }, `awesome AngularJS training videos`), `. They are short, topical, and\npresented clearly. He loves making training videos, but has very little interest\nin building out a website and marketing the content. \"Selling things on the\ninternet\" can be a chore. If you're just selling one off digital things, it is\nfairly straight forward, but if you are looking to build out a website, allow\nusers to register, and charge them on a recurring basis it can be anything but.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `As it happens, I'm very interested in these problems. For the last couple of\nyears I've been `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"http://www.joelhooks.com/blog/2013/06/07/what-i-learned-from-brennan-dunns-consultancy-masterclass-w-slash-sketchnotes/\"\n    }\n  }, `taking\nclasses`), `\nand `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"http://www.joelhooks.com/blog/2013/06/06/my-sketchnotes-and-thoughts-from-baconbizconf-2013/\"\n    }\n  }, `going to\nconferences`), `\nthat boil down to selling things on the internet. Recurring revenue is alluring.\nMy gurus are `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `all about`), ` finding pain and providing immense value to people in\nexchange for money. This is what I want to do too.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Wonder Twin powers; activate!`), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `Digging in: The Stack`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `We have content, traffic, and a solid reputation. What's the next step?`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `To actually build something, of course. `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"http://www.joelhooks.com/blog/2013/09/15/why-i-built-an-angularjs-training-site-on-rails/\"\n    }\n  }, `Rails was the clear\nchoice`), `\nwhen it came time to decide what framework to use. It is mature, easy (enough)\nto use, and has a metric shit-ton of resources for building this type of thing.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `It is also astonishingly easy to deploy Rails apps to Heroku. This has been a\nhuge win. Using the free Heroku tier has allowed me to have a production and\nstaging environment a few keystrokes away. For production, Heroku quickly becomes not free as you add in background workers, SSL, and other essential pieces, but you can go a `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `long`), ` way with free.`), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `ZOMG There is so much to learn!`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `I've been developing software professionally for a few years. My roles are\nprimarily on the UI side of things, but I've built a few full-stack solutions in\nthe past with Django. Over the years I've always `, React.createElement(MDXTag, {\n    name: \"em\",\n    components: components,\n    parentName: \"p\"\n  }, `wanted`), ` to learn Rails, I just\nnever had anything real to build. Tutorials and books can be boring, especially\nwith no context of something \"real\" that you actually care about to build. That\nsaid, there were a few excellent resources that helped me on the way:`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"http://ruby.railstutorial.org/\"\n    }\n  }, `Michael Hartl's Rub on Rails Tutorial`), `: Outside\nof basic Ruby syntax, this is where you want to start. The web version is free,\nand he guides you through building a \"real\" app with Rails in a clear, easy to\nunderstand manner.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"http://railsapps.github.io/\"\n    }\n  }, `Daniel Kehoe's RailsApp Project`), `: This was a huge\nboost for me. It covered all the bases. I wanted to build an app with Rails.\nCheck. I wanted to use Twitter Boostrap with Rails. Check. I wanted to have\nauthentication and authorization in the app. Check. I wanted to integrate\nrecurring subscription payments. Check.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"http://www.petekeen.net/mastering-modern-payments\"\n    }\n  }, `Peter Keen's Mastering Modern\nPayments`), `: If you are going\nto sell stuff via a Rails app, `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `buy this book today`), `. It saved me `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `so much\ntime`), ` and instilled a confidence that I might never have had without it.\nRailsApp is pretty good, but for me it started to break down when I wanted to\nadd payment. I needed deeper understanding and control, and Pete's book\ndelivered the knowledge I needed in a concise 120 page guide. I'd recommend\ngetting the verion with the code, because it was a huge help to me.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"http://gilesbowkett.blogspot.com/2013/10/new-ebook-software-as-disservice-fixing.html\"\n    }\n  }, `Giles Bowkett's Software as a\nDisservice`), `\nis a direct critique of RailsApp. It is harsh, but constructive. It addresses\ncode smells that I had noticed, enforced some of what I learned in Pete's book,\nand lays out some solid practices that a Rails noob like me won't learn in 1000\nsearches that result in a Stack Overflow answer. It's an opinionated style and\npractices guide. `, React.createElement(MDXTag, {\n    name: \"em\",\n    components: components,\n    parentName: \"p\"\n  }, `note: RailsApp has its flaws, and it was extremely useful to\nme. Daniel is passionate and has put out a lot of excellent material, but\ncharging people real money for a product or service is terrifying. I `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"em\"\n  }, `needed`), `\nthis critique to plug some serious holes in the implementation. It is important\nto recognize that Giles is critiquing the `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"em\"\n  }, `code`), ` and not the developer that\nwrote it.`)), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `These four sources were keys to the successful launch of egghead.io's Pro\nsubscription service. Along with countless posts, Stack Overflow answers, and\ndocumentation written by the Ruby/Rails community. It is amazing. Now is a\n`, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `very`), ` good time to be a nerd.`), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `Taking Payments: `, `*`, `scared face`, `*`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `It really is terrifying. Maybe it isn't as scary if you've done it before and\nknow what you are doing. I didn't qualify.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Luckily we live in a fantastic age of modern convenience.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `Stripe`), `.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `What an amazing service.`), React.createElement(MDXTag, {\n    name: \"ul\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `No complicated merchant accounts or setup`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `By developers, for developers`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `Wonderful API`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `Excellent resources for testing`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `Solid documentation`), React.createElement(MDXTag, {\n    name: \"li\",\n    components: components,\n    parentName: \"ul\"\n  }, `Easy integration`)), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `They handle a huge amount of the drudgery invloved with taking payments from\npeople on the internet. They remove the horrors of PCI compliance by providing\nan implementation that allows you to take credit cards without ever actually\nhaving the actual credit card numbers touch your system. They travel over\nsecure-socket-layer directly to Stripe, who responds with a token that allows\nyou to initiate an authorized charge. It is beautiful. Once you've authorized a\nsubscription, Stripe manages the recurring billing for you.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `To help with the subscriptions, I found the `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://github.com/andrewculver/koudoku\"\n    }\n  }, `Koudoku\ngem`), ` to be a great resource. While I\nhad to fork it and manipulate it to some extent for my specific needs, it does a\nlot of the heavy lifting. I'm on the fence about using a gem to handle all of\nthis. On one hand, it is `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `very`), ` easy. On the other, having your subscription\nimplementation tucked away in a \"black box\" can bite you when the shit hits the\nfan. Give and take.`), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `What would I do differently?`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `Testing`)), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `Testing`)), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `Testing`)), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `It is tough, as a noob, to get in and write proper tests. `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `All`), ` of the\nresources I listed above discuss testing. I skipped it. You know what is\n`, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `really hard`), `? Going back through a non-trivial system and writing a solid\ntest suite.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `This can't be said enough. Tests should `, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `guide design of code`), ` and when they\nare tacked on later, they lose a big chunk of value. This isn't to say they\ndon't still provide immense value, but \"test later\" often means \"test never\" and\nthis isn't a good situation to be in.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `I'm working on retrofitting tests, but it is a chore. Test early, test often.`), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `Summary`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Building a subscription service is scary. Luckily the internet is stuffed full\nof open source projects, examples, and helpful people sharing knowledge. Some of\nit is free, but some of the best resources cost a few dollars. Worth every\npenny.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Rails is a great framework for this sort of thing. I'd recommend it highly, if\nyou are trying to build an application that requires recurring billing for your\nusers.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"strong\",\n    components: components,\n    parentName: \"p\"\n  }, `Test early, test often`), `. It's an additional thing to learn and understand if\nyou are just starting out, but it is worth the effort. If I could go back and do\nanything differently, it would be to write solid tests along the way. Don't make\nthe same mistake with your apps!`));\n});"}}},"pageContext":{"id":"b922b367-67eb-5c5a-afb3-d3f7020784bc","prev":{"id":"0e19b7fa-e092-5940-9a45-5cb1569b88a3","parent":{"name":"2014-02-06-stop-writing-for-loops-start-using-underscorejs","sourceInstanceName":"legacy"},"excerpt":"How many for loops did you write today? This week? Sure. That's harmless enough. Ugly and weird, but not something to really complain about. But this is all too common: Which on the scale of bad code, isn't even  that  bad, but you start throwing…","fields":{"title":"Stop writing For loops. Start using underscore.","slug":"2014/02/06/Stop-writing-For-loops-Start-using-underscore","categories":[],"date":"2014-02-06 00:33"},"code":{"scope":"/Users/joel/Code/joelhooks-com/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}},"next":{"id":"cfe9a357-1cd2-5d4f-88f9-1bf83a87f5c1","parent":{"name":"2013-09-23-how-to-record-a-high-quality-screencast","sourceInstanceName":"legacy"},"excerpt":"Audio:\nconvert mono to stero\nadd a slight delay to one channel\nuse an EQ\nadd a touch of reverb (not too much)\nadd a little compression","fields":{"title":"How to Record a High Quality Screencast","slug":"2013/09/23/How-to-Record-a-High-Quality-Screencast","categories":[],"date":"2013-09-23 18:49"},"code":{"scope":"/Users/joel/Code/joelhooks-com/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}}}}